name: Node.js CI

on:
  push:
    branches:
      - '*' 
    paths:
      - 'example-application/**'
  pull_request:
    branches:
      - master
    paths:
      - 'example-application/**'

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (github.event.head_commit.changed_files > 0) && contains(github.event.head_commit.modified, 'example-application/') }}
    steps:
    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - run: npm i

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-suite: [ "test", "test:nestjs", "test:mocha" ]
    if: ${{ github.event_name == 'push' && contains(github.event.head_commit.modified, 'example-application/') }}

    steps:
      - uses: actions/checkout@v2
      - uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v2
        with:
          node-version: "${{ needs.build.outputs.NVMRC }}"

      - name: Cache Node.js modules (for tests)
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - run: npm i

      - name: Run ${{ matrix.test-suite }}
        run: npm run ${{ matrix.test-suite }}
